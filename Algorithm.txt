Algorithm:
Description of the Hand:
It represents a player's hand in a game of Blackjack. 
It manages the cards held by the player and provides methods to add cards to the hand, calculate the total value of the hand, and display the content of the hand.

Data type of the Hand:
- numberOfCards (int): Represents the number of cards in the hand.
- cards (array of Strings): Represents the content (including suit) of all the cards in the hand.

Methods:

- void add(String card): Adds a card to the hand.
 Parameters: card (String): Represents the card to be added to the hand.
 Return Type: None
 Description: Adds the specified card to the hand.
- int total(): Calculates the total value of the hand.
 Parameters: None
 Return Type: int
 Description: Calculates the total value of the hand according to the rules of Blackjack and returns the total.
- void display(): Prints out the content of the hand.
 Parameters: None
 Return Type: None
 Description: Prints out the content of all the cards in the hand.

1. Initialize totalValue as 0.
2. Initialize aceCount as 0.
3. Loop through each card in the hand:
  - Extract the rank of the card.
  - If the rank is a number (2 through 10), add its face value to totalValue.
  - If the rank is "Jack", "Queen", or "King", add 10 to totalValue.
  - If the rank is "Ace", increment aceCount by 1.
4. For each Ace in the hand:
  - If adding 11 to totalValue keeps it less than or equal to 21, add 11 to totalValue.
  - Otherwise, add 1 to totalValue.
5. Return totalValue.

